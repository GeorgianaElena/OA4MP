/*
   This is for linking identities. It assumes that the voPersonExternalID is already in
   LDAP and will do a search there for it. If found, then it will do a second LDAP query
   for the user's NCSA-specific information.
   Author: Jeff Gaynor
   Created: 2020-10-31T12:39:30.422Z

   The client configuration:

   {"tokens": {"identity": {
    "qdl":  {
     "load": "lsst/linking.qdl",
     "xmd": {"exec_phase":   [
      "pre_auth",
      "post_token"
     ]}
    },
    "type": "identity"
   }}}

*/


// Some constants for later.
script_load('utils/init.qdl');
if[
    exec_phase == 'pre_auth' && claims.idp != idp.ncsa
  ][
     v := null;
     switch[
        if[claims.idp == idp.github]then[v:=claims.oidc+'@github.com';];
        if[claims.idp == idp.google]then[v:=claims.oidc+'@accounts.google.com';];
        if[claims.idp == idp.orcid ]then[v:=replace(claims.oidc,'http://', 'https://');];
     ]; //end switch
     claims.VOP := v;
     f. := new_template('ncsa');
     f.search_filter_attribute := VOP;
     f.search_attributes. := ['uid']; // return the uid from the search as a claim
     c. := get_claims(create_source(f.), v);
     claims.uid := c.uid;
]; // end if
script_load('ncsa/ncsa-default.qdl');

/*
Original script for functors -- here for reference while I debug, should be deleted at some point.
"setEnv('vo','voPersonExternalID');",
  "setEnv('ncsa','https://idp.ncsa.illinois.edu/idp/shibboleth');",
  "# if the IDP is NCSA, just set the uid and do the second LDAP search, otherwise, search first on voPersonExternalID to set it.",
  "if[",
  "equals(get('idp'),'${ncsa}')",
  "]then[",
  "set('uid',drop('@ncsa.illinois.edu',get('eppn'))),",
  "set('${vo}',get('eppn'))",
  "]else[",
  "set_claim_source('LDAP','3258ed63b62d1a78')",
  "];",
  "set_claim_source('ncsa-default','uid');"


   "setEnv('github','http://github.com/login/oauth/authorize');",
      "setEnv('google','http://google.com/accounts/o8/id');",
      "setEnv('orcid','http://orcid.org/oauth/authorize');",
      "setEnv('ncsa','https://idp.ncsa.illinois.edu/idp/shibboleth');",
      "#  Now figure out which IDP was used and set voPersonExternalID so it may be searched for.",
      "xor{",
      "    if[equals(get('idp'),'${github}')]then[set('${vo}',concat(get('oidc'),'@github.com'))],",
      "    if[equals(get('idp'),'${google}')]then[set('${vo}',concat(get('oidc'),'@accounts.google.com'))],",
      "   if[equals(get('idp'),'${orcid}')]then[set('${vo}',replace(get('oidc'),'http://','https://'))]",
      "};"
*/