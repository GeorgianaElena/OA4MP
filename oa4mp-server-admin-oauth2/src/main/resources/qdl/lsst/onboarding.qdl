/*
)help    There is a pair of scripts is for LSST. These do
    * onboarding = if a person comes in through any of several IDPs create a voPersonExternalID
                   and return that as a claim.
    * linking = Once a user has been onboarded, possibly do a two-step look up. If their IDP is NCSA,
                then just get them. If not, create the voPersonExternalID, query NCSA LDAP on that, then
                look them up based on their associated EPPN.
   Author: Jeff Gaynor
   Created: 2020-10-31T12:58:43.944Z
   

   {"tokens": {"identity": {
    "qdl":  {
     "load": "lsst/onboarding.qdl",
     "xmd": {"exec_phase":   ["post_token"]}
    },
    "type": "identity"
   }}}
*/
script_load('utils/init.qdl');


v := null;
if[claims.idp == idp.github][v:=claims.oidc+'@github.com';];
if[claims.idp == idp.google][v:=claims.oidc+'@accounts.google.com';];
if[claims.idp == idp.orcid][v:=replace(claims.oidc,'http://', 'https://');];
if[
     v != null
   ][
// go look up voPersonExternalID  first in LDAP
                    cfg. := new_template('ncsa');
                    cfg. := create_source(cfg.);
          cfg.claim_name := 'uid';
           cfg.ldap_name := 'voPersonExternalID';
         cfg.search_base := 'ou=People,dc=ncsa,dc=illinois,dc=edu';
  cfg.search_attributes. := ['uid'];
    cfg.type := 'ldap';
say('***QDL: cfg. ==' + to_string(cfg.));
                      c. := get_claims(cfg., v);
say('***QDL: got VOP claims:' + to_string(c.));
   if[is_defined(c.uid)][claims.uid := c.uid;];
]else[
   // no recognized IDP at this point -- they used somethine we don't honor.
   if[
       claims.idp != idp.ncsa
     ][
        return();
     ]else[
        claims.uid := head(claims.eppn, '@');
     ];
];


say('***QDL: getting claims');
             cfg. := new_template('ncsa');
             cfg. := create_source(cfg.);
          claims. := claims. ~ get_claims(cfg., claims.uid);
say('***QDL: Returning claims:' + to_string(claims.));
